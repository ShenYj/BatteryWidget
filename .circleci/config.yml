# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
# For a detailed guide to building and testing on iOS, read the docs:
# https://circleci.com/docs/2.0/testing-ios/
version: 2

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
jobs:
  "BatteryWidget CI":
    # Specify the execution environment. You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
    # See: https://circleci.com/docs/2.0/configuration-reference/#docker-machine-macos-windows-executor
    parallelism: 1
    shell: /bin/bash --login
    environment:
      XCODE_TEST_REPORTS: /tmp/xcode-test-results
      LANG: en_US.UTF-8
    macos:
      xcode: 13.1.0 # Specify the Xcode version to use
    # Add steps to the job
    # See: https://circleci.com/docs/2.0/configuration-reference/#steps
    # carthage update --use-xcframeworks
    steps:
      - checkout
      - run: mkdir -p $CIRCLE_ARTIFACTS $CIRCLE_TEST_REPORTS $XCODE_TEST_REPORTS
      - restore_cache:
          keys:
            - v1-dep-{{ .Branch }}-
            - v1-dep-master-
            - v1-dep-
      - run:
          name: Bootstrap Carthage
          command: |
            brew update
            brew upgrade carthage
            carthage bootstrap
      - run:
          name: Carthage Deploy
          command: |
            carthage build --no-skip-current
            carthage archive BatteryWidget
      - save_cache:
          key: v1-dep-{{ .Branch }}-{{ epoch }}
          paths:
            - Carthage
      - run:
          name: Build (Swift 5.0)
          command: >
                   set -o pipefail && xcodebuild build SWIFT_VERSION=5.5
                   -workspace RxWebKit.xcworkspace
                   -scheme 'RxWebKit' -sdk iphonesimulator
                   -destination "name=iPhone 11" | xcpretty -c
      - run:
          name: Run Tests (Swift 5.0)
          command: >
                   set -o pipefail && xcodebuild test SWIFT_VERSION=5.5
                   -workspace RxWebKit.xcworkspace
                   -scheme 'RxWebKitTests-iOS' -sdk iphonesimulator
                   -destination "name=iPhone 11" | xcpretty -c --test
      - store_artifacts:
          path: /tmp/xcode-test-results

# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
  version: 2
  build:
    jobs:
      - "BatteryWidget CI"




# https://github.com/CircleCI-Public/circleci-demo-ios
# https://github.com/CircleCI-Public/circleci-demo-macos
# https://github.com/CircleCI-Public/macos-orb